#include "Pieces.h"

constexpr int Kinds = 7;
constexpr int Rot = 4;
constexpr int Matrix = 5;
constexpr int Translate = 2;

char m_Pieces[Kinds][Rot][Matrix][Matrix] =
{
	//Square
	{
		//1st rotations
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},

	},
	//I Piece
	{
		//1st Rotation
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,1,2,1,1},
			{0,0,0,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,1,0,0},
			{0,0,2,0,0},
			{0,0,1,0,0},
			{0,0,1,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{1,1,2,1,0},
			{0,0,0,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,1,0,0},
			{0,0,1,0,0},
			{0,0,2,0,0},
			{0,0,1,0,0},
			{0,0,0,0,0}
		}
	},
	// L Piece
	{
		//1st Rotation
		{
			{0,0,0,0,0},
			{0,0,1,0,0},
			{0,0,2,0,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		}
	},
	// L mirrored
	{
		{
			{0,0,0,0,0},
			{0,0,1,0,0},
			{0,0,2,0,0},
			{0,1,1,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,1,0,0,0},
			{0,1,2,1,0},
			{0,0,0,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,1,1,0},
			{0,0,2,0,0},
			{0,0,1,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,1,2,1,0},
			{0,0,0,1,0},
			{0,0,0,0,0}
		}
	},
	// N
	{
		//1st Rotation
		{
			{0,0,0,0,0},
			{0,0,0,1,0},
			{0,0,2,1,0},
			{0,0,1,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,1,2,0,0},
			{0,0,1,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,1,0,0},
			{0,1,2,0,0},
			{0,1,0,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,1,1,0,0},
			{0,0,2,1,0},
			{0,0,0,0,0},
			{0,0,0,0,0}
		}
	},
	// N mirrored
	{
		{
			{0,0,0,0,0},
			{0,0,1,0,0},
			{0,0,2,1,0},
			{0,0,0,1,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,2,1,0},
			{0,1,1,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,1,0,0,0},
			{0,1,2,0,0},
			{0,0,1,0,0},
			{0,0,0,0,0}
		},
		{
			{0,0,0,0,0},
			{0,0,1,1,0},
			{0,1,2,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0}
		}
	},
	// T
	{
		{
		{0,0,0,0,0},
		{0,0,1,0,0},
		{0,0,2,1,0},
		{0,0,1,0,0},
		{0,0,0,0,0}
		},
		{
		{0,0,0,0,0},
		{0,0,0,0,0},
		{0,1,2,1,0},
		{0,0,1,0,0},
		{0,0,0,0,0}
		},
		{
		{0,0,0,0,0},
		{0,0,1,0,0},
		{0,1,2,0,0},
		{0,0,1,0,0},
		{0,0,0,0,0}
		},
		{
		{0,0,0,0,0},
		{0,0,1,0,0},
		{0,1,2,1,0},
		{0,0,0,0,0},
		{0,0,0,0,0}
		}
	}
};
char m_PieceInitPos[Kinds][Rot][Translate] =
{
	/* Square */
	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -3}
	},
	/* I */
	{
		{-2, -2},
		{-2, -3},
		{-2, -2},
		{-2, -3}
	},
	/* L */
	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
	},
	/* L mirrored */
	{
		{-2, -3},
		{-2, -2},
		{-2, -3},
		{-2, -3}
	},
	/* N */
	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
	},
	/* N mirrored */
	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
	},
	/* T */
	{
		{-2, -3},
		{-2, -3},
		{-2, -3},
		{-2, -2}
	},
};

int Pieces::GetBlockType(int pPiece, int pRot, int pX, int pY)
{
	return m_Pieces[pPiece][pRot][pX][pY];
}
int Pieces::GetXInitPos(int pPiece, int pRot)
{
	return m_PieceInitPos[pPiece][pRot][0];
}
int Pieces::GetYInitPos(int pPiece, int pRot)
{
	return m_PieceInitPos[pPiece][pRot][1];
}